Bootstrap: localimage
From: /groupspace/cnerg/users/epflug/dockerfiles/openmpi-4.1.6_gcc-11.3.0.sif

%files
	/filespace/e/epflug/research/dockerfiles/hdf5-1_13_2.tar.gz

%environment
	export OPENMC_CROSS_SECTIONS=/opt/epflug/cross_sections/fendl-3.2-hdf5/cross_sections.xml
	export PATH=/opt/software/openmc/bin:/usr/bin:$PATH
	export LD_LIBRARY_PATH=/opt/software/openmc/lib:$LD_LIBRARY_PATH
	export PYTHONPATH=/opt/software/openmc:$PYTHONPATH
	
%post
	chmod 777 /tmp # to allow pip to work

	# apt-get software not in base image
	apt-get update && \
	apt-get -y upgrade && \
	apt-get install -y \
		xz-utils \
		make \
		autoconf \
		flex \
		bison \
		libssl-dev \
		libtool \
		libpng-dev

	# install python-config and setuptools
	python -m pip install python-config setuptools

	# install tzdata before the next package set
	DEBIAN_FRONTEND=noninteractive TZ=America/Chicago apt-get -y install tzdata

	# packages that need to be installed after tzdata is properly installed
	apt-get install -y \
	pkg-config

	# TODO MAYBE DELETE THIS ALSO
	pip install --upgrade cmake

	# set alternative so that python runs python 3 code without installing python 2
	# the arguments are as follows:
	# RUN update-alternatives --install </path/to/alternative> <name> </path/to/source> <priority>
	update-alternatives --install /usr/local/bin/python python /usr/bin/python3 99

	# create directorries needed for dependencies, data, and the place to clone the openmc repo
	mkdir /opt/software && \
	mkdir /opt/software/openmc && \
	mkdir /opt/software/temp && \
	mkdir /opt/epflug && \
	mkdir /opt/epflug/cross_sections
	
	# copy hdf5 tar into the correct directory
	cp /opt/hdf5-1_13_2.tar.gz /opt/software/temp
	# build hdf5 and install in /opt/software/hdf5
	mkdir /opt/software/hdf5 && \
	cd /opt/software/temp && \
	tar -xvf hdf5-1_13_2.tar.gz && \
	cd hdf5-hdf5-1_13_2 && \
	mkdir build && \
	cd build && \
	../configure --prefix="/opt/software/hdf5" --enable-optimization=high --enable-shared  --enable-hl --enable-build-mode=production --enable-parallel && \
	make -j8 && \
	make install && \
	rm -rf /opt/software/temp/*
	
	# no more software requires temp
	rm -rf /opt/software/temp
	
	# HDF5 env vars
	export HDF5_ROOT=/opt/software/hdf5
	export HDF5_INCLUDE_DIR=/opt/software/hdf5/include
	export HDF5_LIBDIR=/opt/software/hdf5/lib
	export METHOD=opt
	
	# get FENDL 3.2 for openmc
	cd /opt/epflug
	wget -q -O - https://anl.box.com/shared/static/3cb7jetw7tmxaw6nvn77x6c578jnm2ey.xz | tar -C cross_sections -xJ
	
	# clone openmc
	git clone --recurse-submodules https://github.com/openmc-dev/openmc.git
	
	cd /opt/epflug/openmc
	
	# build and install OpenMC
	git checkout v0.14.1 && \
	mkdir build && \
	cd build && \
	cmake -DCMAKE_INSTALL_PREFIX=/opt/software/openmc -DOPENMC_USE_MPI=ON -DCMAKE_BUILD_TYPE=Debug .. && \
	make install -j8
	
		

